{"version":3,"sources":["apis/stream.js","history.js","actions/index.js","components/streams/StreamForm.js","components/streams/StreamCreate.js","components/streams/StreamEdit.js","Modal.js","components/streams/StreamDelete.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","components/header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createBrowserHistory","fetchStream","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","response","wrap","_context3","prev","next","stream","get","concat","sent","type","payload","data","stop","_x4","apply","this","arguments","StreamForm","renderInput","formProps","react_default","createElement","className","label","assign","input","autoCorrect","_this","renderError","meta","onSubmit","formValue","props","touched","error","handleSubmit","Field","name","component","Component","reduxForm","form","validate","title","description","StreamCreate","createStream","Fragment","streams_StreamForm","connect","formValues","_ref","_callee","getState","_getState$auth","userId","userName","avatar","date","_context","auth","Date","toLocaleString","day","month","hour","minute","post","objectSpread","history","push","_x","_x2","StreamEdit","editStream","match","params","initialValues","state","ownProps","streams","_ref4","_callee4","_context4","patch","_x5","Modal","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","ReactDOM","createPortal","onClick","onDismiss","e","stopPropagation","content","action","document","querySelector","StreamDelete","deleteStream","react_router_dom","to","renderContent","src_Modal","_ref5","_callee5","_context5","delete","_x6","StreamList","renderAdmin","currentUserId","_id","renderCreate","isSignedIn","style","textAlign","fetchStreams","_this2","map","class","src","alt","renderList","values","_ref2","_callee2","_context2","_x3","StreamShow","call","_componentDidMount","player","_this$props$stream","marginTop","mapDispatchToProps","GoogleAuth","onSignInClick","signIn","onSignOutClick","signOut","onAuthChange","currentUser","getId","Ab","w3","ig","Paa","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","console","log","renderAuthButton","header","components_GoogleAuth","App","react_router","components_header","path","exact","INITIAL_STATE","combineReducers","length","undefined","formReducer","array","param","toConsumableArray","index","defineProperty","newState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","es","components_App"],"mappings":"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","file":"static/js/main.bd762a0a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"/api\"\r\n});\r\n","import { createBrowserHistory } from \"history\";\r\n//redirect inside action creator\r\nexport default createBrowserHistory();\r\n","import stream from \"../apis/stream\";\r\n\r\nimport history from \"../history\";\r\n\r\nexport const signIn = (userId, userName, avatar) => {\r\n    return {\r\n        type: \"SIGN_IN\",\r\n        payload: { userId, userName, avatar }\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: \"SIGN_OUT\"\r\n    };\r\n};\r\n\r\nexport const createStream = formValues => async (dispatch, getState) => {\r\n    const { userId, userName, avatar } = getState().auth;\r\n    let date = new Date();\r\n    date = await date.toLocaleString(\"en-US\", {\r\n        day: \"2-digit\",\r\n        month: \"long\",\r\n        hour: \"numeric\",\r\n        minute: \"numeric\"\r\n    });\r\n\r\n    const response = await stream.post(\"/stream\", {\r\n        ...formValues,\r\n        userId,\r\n        userName,\r\n        avatar,\r\n        date\r\n    });\r\n    dispatch({ type: \"CREATE_STREAM\", payload: response.data });\r\n\r\n    //navigate to home if success\r\n    history.push(\"/\");\r\n};\r\n\r\nexport const fetchStreams = () => async dispatch => {\r\n    const response = await stream.get(\"/stream\");\r\n\r\n    dispatch({ type: \"FETCH_STREAMS\", payload: response.data });\r\n};\r\n\r\nexport const fetchStream = id => async dispatch => {\r\n    const response = await stream.get(`/stream/${id}`);\r\n    dispatch({ type: \"FETCH_STREAM\", payload: response.data });\r\n};\r\n\r\nexport const editStream = (id, formValues) => async dispatch => {\r\n    const response = await stream.patch(`/stream/${id}`, formValues);\r\n    dispatch({ type: \"EDIT_STREAM\", payload: response.data });\r\n\r\n    history.push(\"/\");\r\n};\r\n\r\nexport const deleteStream = id => async dispatch => {\r\n    await stream.delete(`/stream/${id}`);\r\n\r\n    dispatch({ type: \"DELETE_STREAM\", payload: id });\r\n\r\n    history.push(\"/\");\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\n\r\n//streamForm is wrapped in redux form\r\nclass StreamForm extends Component {\r\n    renderError(meta) {\r\n        if (meta.touched && meta.error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{meta.error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    // Field pass input and meta object to component wrap inside it\r\n    renderInput = formProps => {\r\n        //spread object ..., every attribute of formProps.input become attribute of <input>\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{formProps.label}</label>\r\n                <input {...formProps.input} autoCorrect=\"off\" />\r\n                {/* meta hold the error information */}\r\n                {this.renderError(formProps.meta)}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    // formValue contain value from Field\r\n    //{title:\"  \", description: \"  \"}\r\n    onSubmit = formValue => {\r\n        this.props.onSubmit(formValue);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            // Field will pass label props to component props(it is renderInput is this case)\r\n            //handle submit is a props created by redux form\r\n            //handleSubmit pass formValue to onSubmit\r\n\r\n            <form\r\n                className=\"ui form error\"\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n            >\r\n                <Field\r\n                    name=\"title\"\r\n                    component={this.renderInput}\r\n                    label=\"Enter Title\"\r\n                />\r\n                <Field\r\n                    name=\"description\"\r\n                    component={this.renderInput}\r\n                    label=\"Enter Discription\"\r\n                />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst validate = formValue => {\r\n    const error = {};\r\n    if (!formValue.title) {\r\n        error.title = \"you must enter title\";\r\n    } else if (!formValue.description) {\r\n        error.title = \"you must enter dis\";\r\n    }\r\n\r\n    return error;\r\n};\r\n\r\nexport default reduxForm({\r\n    form: \"StreamForm\",\r\n    validate\r\n})(StreamForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamCreate extends Component {\r\n    // formValue contain value from Field\r\n    //{title:\"  \", description: \"  \"}\r\n    onSubmit = formValue => {\r\n        this.props.createStream(formValue);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            // Field will pass label props to component props(it is renderInput is this case)\r\n            //handle submit is a props created by redux form\r\n            <React.Fragment>\r\n                <h3>Create Stream</h3>\r\n\r\n                <StreamForm onSubmit={this.onSubmit} />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n//connect redux action and redux form\r\n\r\nexport default connect(\r\n    //first arguement: function\r\n    null,\r\n    //second arg: object contain action creator\r\n    { createStream }\r\n)(StreamCreate);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchStream, editStream } from \"../../actions\";\r\nimport StreamForm from \"./StreamForm\";\r\n\r\nclass StreamEdit extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    onSubmit = formValue => {\r\n        this.props.editStream(this.props.match.params.id, formValue);\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading</div>;\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <h3>Edit {this.props.stream.title}</h3>\r\n                <StreamForm\r\n                    onSubmit={this.onSubmit}\r\n                    //pass value to form\r\n                    initialValues={{\r\n                        title: this.props.stream.title,\r\n                        description: this.props.stream.description\r\n                    }}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream, editStream }\r\n)(StreamEdit);\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport class Modal extends Component {\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div\r\n                onClick={this.props.onDismiss}\r\n                className=\"ui dimmer modals visible active\"\r\n            >\r\n                <div\r\n                    onClick={e => e.stopPropagation()}\r\n                    className=\"ui standard modal visible active\"\r\n                >\r\n                    <div className=\"header\">{this.props.title}</div>\r\n                    <div className=\"content\">{this.props.content}</div>\r\n                    <div className=\"actions\">{this.props.action}</div>\r\n                </div>\r\n            </div>,\r\n            document.querySelector(\"#modal\")\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Modal from \"../../Modal\";\r\nimport history from \"../../history\";\r\nimport { fetchStream, deleteStream } from \"../../actions\";\r\n\r\nclass StreamDelete extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    action = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <button\r\n                    onClick={() => {\r\n                        this.props.deleteStream(this.props.match.params.id);\r\n                    }}\r\n                    className=\"ui primary button\"\r\n                >\r\n                    Yes\r\n                </button>\r\n                <Link to=\"/\" className=\"ui button\">\r\n                    Cancel\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    renderContent = () => {\r\n        if (!this.props.stream) {\r\n            return \"\";\r\n        } else {\r\n            return `Are you sure you want to delete ${this.props.stream.title}`;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                title=\"Delete Stream\"\r\n                content={this.renderContent()}\r\n                action={this.action()}\r\n                onDismiss={() => {\r\n                    history.push(\"/\");\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        stream: state.streams[ownProps.match.params.id]\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStream, deleteStream }\r\n)(StreamDelete);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { fetchStreams } from \"../../actions\";\r\n\r\nclass StreamList extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchStreams();\r\n    }\r\n\r\n    //render edit, delete button if user is authenticated\r\n    renderAdmin = stream => {\r\n        if (stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div>\r\n                    <Link to={`/streams/edit/${stream._id}`}> Edit </Link>\r\n                    <Link to={`/streams/delete/${stream._id}`}> Delete</Link>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    //render create new stream button if user is authenticated\r\n    renderCreate = () => {\r\n        if (this.props.isSignedIn) {\r\n            return (\r\n                <div style={{ textAlign: \"right\" }}>\r\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\r\n                        Create\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            if (stream._id && stream) {\r\n                return (\r\n                    <div className=\"event\" key={stream._id}>\r\n                        <div class=\"label\">\r\n                            <img src={stream.avatar} alt=\"avatar\" />\r\n                        </div>\r\n                        <div class=\"content\">\r\n                            <Link to={`/streams/${stream._id}`}>\r\n                                <div class=\"summary\">\r\n                                    <span className=\"user\">{stream.title}</span>{\" \"}\r\n                                    <div class=\"date\">\r\n                                        {stream.date} by {stream.userName}\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                            <div class=\"meta\">\r\n                                <span className=\"like\">\r\n                                    {this.renderAdmin(stream)}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui feed\">{this.renderList()}</div>\r\n                {this.renderCreate()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //convert  object to array\r\n        streams: Object.values(state.streams),\r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchStreams }\r\n)(StreamList);\r\n","import React, { Component } from \"react\";\r\nimport { fetchStream } from \"../../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class StreamShow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.fetchStream(this.props.match.params.id);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.player || !this.props.stream) return;\r\n    }\r\n\r\n    //render instruction if user is authenticated\r\n\r\n    render() {\r\n        if (!this.props.stream) {\r\n            return <div>Loading</div>;\r\n        } else {\r\n            const {\r\n                title,\r\n                description,\r\n                userName,\r\n                date,\r\n                avatar\r\n            } = this.props.stream;\r\n            return (\r\n                <div>\r\n                    <h1>{title}</h1>\r\n                    <span class=\"ui  image label\">\r\n                        <img src={avatar} alt=\"avatar\" />\r\n                        {userName}\r\n                        <div class=\"detail\">{date}</div>\r\n                    </span>\r\n\r\n                    <p style={{ marginTop: \"10px\" }}>{description}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    stream: state.streams[ownProps.match.params.id],\r\n    auth: state.auth\r\n});\r\n\r\nconst mapDispatchToProps = { fetchStream };\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StreamShow);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../actions\";\r\n\r\nclass GoogleAuth extends Component {\r\n    componentDidMount() {\r\n        //load oath2 from google server\r\n        window.gapi.load(\"client:auth2\", () => {\r\n            window.gapi.client\r\n                .init({\r\n                    clientId:\r\n                        \"321897280820-tjkaj148lcs7110nt057mrs86a5epms6.apps.googleusercontent.com\",\r\n                    //what type of data we want to access\r\n                    scope: \"email\"\r\n                })\r\n                //auth: represent for user, all user infomation can be get from this object\r\n                .then(() => {\r\n                    this.auth = window.gapi.auth2.getAuthInstance();\r\n                    this.onAuthChange(this.auth.isSignedIn.get());\r\n                    this.auth.isSignedIn.listen(this.onAuthChange);\r\n\r\n                    //test with chrome console\r\n                    window.auth = this.auth;\r\n\r\n                    //username this.auth.currentUser.Ab.w3.ig\r\n                    console.log(this.auth.currentUser.Ab.w3.Paa);\r\n                });\r\n        });\r\n    }\r\n\r\n    onSignInClick = () => {\r\n        this.auth.signIn();\r\n    };\r\n\r\n    onSignOutClick = () => {\r\n        this.auth.signOut();\r\n    };\r\n\r\n    onAuthChange = isSignedIn => {\r\n        if (isSignedIn) {\r\n            this.props.signIn(\r\n                this.auth.currentUser.get().getId(),\r\n\r\n                //user name\r\n                this.auth.currentUser.Ab.w3.ig,\r\n\r\n                //avatar link\r\n                this.auth.currentUser.Ab.w3.Paa\r\n            );\r\n        } else {\r\n            this.props.signOut();\r\n        }\r\n    };\r\n\r\n    renderAuthButton() {\r\n        if (this.props.isSignedIn === null) {\r\n            return null;\r\n        } else if (this.props.isSignedIn === true) {\r\n            return (\r\n                <React.Fragment>\r\n                    <h4>Hi, {this.auth.currentUser.Ab.w3.ig}</h4>\r\n\r\n                    <button\r\n                        onClick={this.onSignOutClick}\r\n                        className=\"ui red google button\"\r\n                    >\r\n                        <i className=\"google icon\" />\r\n                        Sign Out\r\n                    </button>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <button\r\n                    onClick={this.onSignInClick}\r\n                    className=\"ui red google button\"\r\n                >\r\n                    <i className=\"google icon\" />\r\n                    Sign in with Google\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>{this.renderAuthButton()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { isSignedIn: state.auth.isSignedIn };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    //action creator\r\n    { signIn: signIn, signOut: signOut }\r\n)(GoogleAuth);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport GoogleAuth from \"./GoogleAuth\";\r\n\r\nclass header extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className=\"ui secondary pointing menu\">\r\n                <NavLink to=\"/\" className=\"item\">\r\n                    <h1>Live Stream</h1>\r\n                </NavLink>\r\n                <div className=\"right menu\">\r\n                    <h1>\r\n                        <GoogleAuth />\r\n                    </h1>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default header;\r\n","import React, { Component } from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport StreamCreate from \"./streams/StreamCreate\";\r\nimport StreamEdit from \"./streams/StreamEdit\";\r\nimport StreamDelete from \"./streams/StreamDelete\";\r\nimport StreamList from \"./streams/StreamList\";\r\nimport StreamShow from \"./streams/StreamShow\";\r\n\r\nimport Header from \"./header\";\r\nimport history from \"../history\";\r\nclass App extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                {/* // BrowserRouter only have one child */}\r\n                <Router history={history}>\r\n                    <React.Fragment>\r\n                        <Header />\r\n                        {/* exact: only show component if path is EXACTLY \"/\" */}\r\n                        <Route path=\"/\" exact component={StreamList} />\r\n                        <Switch>\r\n                            <Route\r\n                                path=\"/streams/new\"\r\n                                exact\r\n                                component={StreamCreate}\r\n                            />\r\n                            <Route\r\n                                path=\"/streams/edit/:id\"\r\n                                exact\r\n                                component={StreamEdit}\r\n                            />\r\n                            <Route\r\n                                path=\"/streams/delete/:id\"\r\n                                exact\r\n                                component={StreamDelete}\r\n                            />\r\n                            <Route\r\n                                path=\"/streams/:id\"\r\n                                exact\r\n                                component={StreamShow}\r\n                            />\r\n                        </Switch>\r\n                    </React.Fragment>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const INITIAL_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case \"SIGN_IN\":\r\n            return {\r\n                isSignedIn: true,\r\n                userId: action.payload.userId,\r\n                userName: action.payload.userName,\r\n                avatar: action.payload.avatar\r\n            };\r\n        case \"SIGN_OUT\":\r\n            return { isSignedIn: false, userId: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport streamReducer from \"./streamReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    //form will hold every form value from every component in App\r\n    form: formReducer,\r\n    streams: streamReducer\r\n});\r\n","export default (state = {}, action) => {\r\n    //convert object to array, each\r\n\r\n    if (action.type === \"FETCH_STREAMS\") {\r\n        const mapMyArray = (array, param) =>\r\n            Object.assign(\r\n                {},\r\n                ...array.map(index => ({ [index[param]]: index }))\r\n            );\r\n\r\n        return { ...state, ...mapMyArray(action.payload, \"_id\") };\r\n\r\n        //when data change, reducer will be updated\r\n    } else if (action.type === \"FETCH_STREAM\") {\r\n        return { ...state, [action.payload._id]: action.payload };\r\n    } else if (action.type === \"CREATE_STREAM\") {\r\n        return { ...state, [action.payload._id]: action.payload };\r\n    } else if (action.type === \"EDIT_STREAM\") {\r\n        return { ...state, [action.payload._id]: action.payload };\r\n    } else if (action.type === \"DELETE_STREAM\") {\r\n        let newState = Object.assign({}, state);\r\n        delete newState[action.payload];\r\n        return newState;\r\n    }\r\n\r\n    return state;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}